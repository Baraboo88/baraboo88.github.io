{"version":3,"sources":["logo.svg","components/rss.js","App.js","reportWebVitals.js","index.js"],"names":["Rss","useState","food1k","setFood1k","food10k","setFood10k","food50k","setFood50k","food150k","setFood150k","food500k","setFood500k","food1500k","setFood1500k","food5kk","setFood5kk","wood1k","setWood1k","wood10k","setWood10k","wood50k","setWood50k","wood150k","setWood150k","wood500k","setWood500k","wood1500k","setWood1500k","wood5kk","setWood5kkk","stone750","setStone750","stone7500","setStone7500","stone37500","setStone37500","stone112k","setStone112k","stone375k","setStone375k","stone1m","setStone1m","stone3kk","setSton3kk","className","type","placeholder","value","onChange","event","target","toFixed","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3783e042.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from 'react';\nimport logo from '../logo.svg';\n\nconst Rss = () => {\n  const [food1k, setFood1k] = useState();\n  const [food10k, setFood10k] = useState();\n  const [food50k, setFood50k] = useState();\n  const [food150k, setFood150k] = useState();\n  const [food500k, setFood500k] = useState();\n  const [food1500k, setFood1500k] = useState();\n  const [food5kk, setFood5kk] = useState();\n  const [foodTotal, setFoodTotal] = useState();\n\n  const [wood1k, setWood1k] = useState();\n  const [wood10k, setWood10k] = useState();\n  const [wood50k, setWood50k] = useState();\n  const [wood150k, setWood150k] = useState();\n  const [wood500k, setWood500k] = useState();\n  const [wood1500k, setWood1500k] = useState();\n  const [wood5kk, setWood5kkk] = useState();\n  const [woodTotal, setWoodTotal] = useState();\n\n  const [stone750, setStone750] = useState();\n  const [stone7500, setStone7500] = useState();\n  const [stone37500, setStone37500] = useState();\n  const [stone112k, setStone112k] = useState();\n  const [stone375k, setStone375k] = useState();\n  const [stone1m, setStone1m] = useState();\n  const [stone3kk, setSton3kk] = useState();\n  const [stoneTotal, setStoneTotal] = useState();\n\n  const [gold500, setGold500] = useState(0);\n  const [gold3000, setGold3000] = useState(0);\n  const [gold15k, setGold15k] = useState(0);\n  const [gold50k, setGold50k] = useState(0);\n  const [gold200k, setGold200k] = useState(0);\n  const [gold600k, seGold600k] = useState(0);\n  const [gold2kk, setGold2kk] = useState(0);\n  const [goldTotal, setGoldTotal] = useState(0);\n\n  const getFoodPakTotal = () => {\n    const totalFood1k = (food1k ? food1k : 0) * 1000;\n    const totalFood10k = (food10k ? food10k : 0) * 10000;\n    const totalFood50k = (food50k ? food50k : 0) * 50000;\n    const totalFood150k = (food150k ? food150k : 0) * 150000;\n    const totalFood500k = (food500k ? food500k : 0) * 500000;\n    const totalFood15m = (food1500k ? food1500k : 0) * 1500000;\n    const totalFood5m = (food5kk ? food5kk : 0) * 5000000;\n\n    return (\n      totalFood1k +\n      totalFood10k +\n      totalFood50k +\n      totalFood150k +\n      totalFood500k +\n      totalFood15m +\n      totalFood5m\n    );\n  };\n\n  const getWoodPakTotal = () => {\n    const totalFood1k = (wood1k ? wood1k : 0) * 1000;\n    const totalFood10k = (wood10k ? wood10k : 0) * 10000;\n    const totalFood50k = (wood50k ? wood50k : 0) * 50000;\n    const totalFood150k = (wood150k ? wood150k : 0) * 150000;\n    const totalFood500k = (wood500k ? wood500k : 0) * 500000;\n    const totalFood15m = (wood1500k ? wood1500k : 0) * 1500000;\n    const totalFood5m = (wood5kk ? wood5kk : 0) * 5000000;\n\n    return (\n      totalFood1k +\n      totalFood10k +\n      totalFood50k +\n      totalFood150k +\n      totalFood500k +\n      totalFood15m +\n      totalFood5m\n    );\n  };\n\n  const getStonePakTotal = () => {\n    const totalFood1k = (stone750 ? stone750 : 0) * 750;\n    const totalFood10k = (stone7500 ? stone7500 : 0) * 7500;\n    const totalFood50k = (stone37500 ? stone37500 : 0) * 37500;\n    const totalFood150k = (stone112k ? stone112k : 0) * 112500;\n    const totalFood500k = (stone375k ? stone375k : 0) * 375000;\n    const totalFood15m = (stone1m ? stone1m : 0) * 1125000;\n    const totalFood5m = (stone3kk ? stone3kk : 0) * 3750000;\n\n    return (\n        totalFood1k +\n        totalFood10k +\n        totalFood50k +\n        totalFood150k +\n        totalFood500k +\n        totalFood15m +\n        totalFood5m\n    );\n  };\n\n  return (\n    <section className=\"container\">\n      <div className=\"columns\">\n        <div className=\"column\">\n          <p className=\"subtitle is-2\">Еда (Food)</p>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={food1k}\n                  onChange={(event) => {\n                    setFood1k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\">\n                  1k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={food10k}\n                  onChange={(event) => {\n                    setFood10k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  10k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={food50k}\n                  onChange={(event) => {\n                    setFood50k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  50k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={food150k}\n                  onChange={(event) => {\n                    setFood150k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  150k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={food500k}\n                  onChange={(event) => {\n                    setFood500k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\">\n                  500k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={food1500k}\n                  onChange={(event) => {\n                    setFood1500k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  1.5M\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={food5kk}\n                  onChange={(event) => {\n                    setFood5kk(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left has-text-white has-background-grey-light\">\n                  5M\n                </span>\n              </div>\n            </div>\n          </div>\n          <p className=\"has-text-weight-bold\">{`Сумма (Total): ${(\n            getFoodPakTotal() / 1000000\n          ).toFixed(2)}M`}</p>\n        </div>\n        <div className=\"column\">\n          <p className=\"subtitle is-2\">Дерево (Wood)</p>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={wood1k}\n                  onChange={(event) => {\n                    setWood1k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\">\n                  1k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={wood10k}\n                  onChange={(event) => {\n                    setWood10k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  10k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={wood50k}\n                  onChange={(event) => {\n                    setWood50k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  50k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={wood150k}\n                  onChange={(event) => {\n                    setWood150k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  150k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={wood500k}\n                  onChange={(event) => {\n                    setWood500k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\">\n                  500k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={wood1500k}\n                  onChange={(event) => {\n                    setWood1500k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  1.5M\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={wood5kk}\n                  onChange={(event) => {\n                    setWood5kkk(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left has-text-white has-background-grey-light\">\n                  5M\n                </span>\n              </div>\n            </div>\n          </div>\n          <p className=\"has-text-weight-bold\">{`Сумма (Total): ${(\n            getWoodPakTotal() / 1000000\n          ).toFixed(2)}M`}</p>\n        </div>\n        <div className=\"column\">\n          <p className=\"subtitle is-2\">Камень (Stone)</p>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                    className=\"input ml-2\"\n                    type=\"text\"\n                    placeholder={`0`}\n                    value={stone750}\n                    onChange={(event) => {\n                      setStone750(event.target.value);\n                    }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\">\n                  0.75k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                    className=\"input ml-2\"\n                    type=\"text\"\n                    placeholder={`0`}\n                    value={stone7500}\n                    onChange={(event) => {\n                      setStone7500(event.target.value);\n                    }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  7.5k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                    className=\"input ml-2\"\n                    type=\"text\"\n                    placeholder={`0`}\n                    value={stone37500}\n                    onChange={(event) => {\n                      setStone37500(event.target.value);\n                    }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  37.5k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                    className=\"input ml-2\"\n                    type=\"text\"\n                    placeholder={`0`}\n                    value={stone112k}\n                    onChange={(event) => {\n                      setStone112k(event.target.value);\n                    }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  112k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                    className=\"input ml-2\"\n                    type=\"text\"\n                    placeholder={`0`}\n                    value={stone375k}\n                    onChange={(event) => {\n                      setStone375k(event.target.value);\n                    }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\">\n                  375k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                    className=\"input ml-2\"\n                    type=\"text\"\n                    placeholder={`0`}\n                    value={stone1m}\n                    onChange={(event) => {\n                      setStone1m(event.target.value);\n                    }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  1.1M\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                    className=\"input ml-2\"\n                    type=\"text\"\n                    placeholder={`0`}\n                    value={stone3kk}\n                    onChange={(event) => {\n                      setSton3kk(event.target.value);\n                    }}\n                />\n                <span className=\"icon is-small is-left has-text-white has-background-grey-light\">\n                  3.7M\n                </span>\n              </div>\n            </div>\n          </div>\n          <p className=\"has-text-weight-bold\">{`Сумма (Total): ${(\n              getStonePakTotal() / 1000000\n          ).toFixed(2)}M`}</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Rss;\n","import logo from './logo.svg';\nimport './css/styles.scss';\nimport {HashRouter, Switch, Route} from 'react-router-dom';\nimport Rss from \"./components/rss\";\n\nfunction App() {\n  return (    <HashRouter >\n    <Switch>\n      <Route exact path=\"/rss\" component = {Rss}/>\n\n    </Switch>\n  </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}