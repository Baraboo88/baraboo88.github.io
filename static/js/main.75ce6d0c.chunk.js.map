{"version":3,"sources":["logo.svg","components/rss.js","App.js","reportWebVitals.js","index.js"],"names":["Rss","useState","food1k","setFood1k","food10k","setFood10k","food50k","setFood50k","food150k","setFood150k","food500k","setFood500k","food1500k","setFood1500k","food5kk","setFood5kk","wood1k","setWood1k","wood10k","setWood10k","wood50k","setWood50k","wood150k","setWood150k","wood500k","setWood500k","wood1500k","setWood1500k","wood5kk","setWood5kkk","stone750","setStone750","stone7500","setStone7500","stone37500","setStone37500","stone112k","setStone112k","stone375k","setStone375k","stone1m","setStone1m","stone3kk","setSton3kk","gold500","setGold500","gold3000","setGold3000","gold15k","setGold15k","gold50k","setGold50k","gold200k","setGold200k","gold600k","seGold600k","gold2kk","setGold2kk","pickOneLvl1","setPickOneLvl1","pickOneLvl1Food","setPickOneLvl1Food","pickOneLvl1Wood","setPickOneLvl1Wood","pickOneLvl1Stone","setPickOneLvl1Stone","pickOneLvl1Gold","setPickOneLvl1Gold","pickOneLvl2","setPickOneLvl2","pickOneLvl2Food","setPickOneLvl2Food","pickOneLvl2Wood","setPickOneLvl2Wood","pickOneLvl2Stone","setPickOneLvl2Stone","pickOneLvl2Gold","setPickOneLvl2Gold","pickOneLvl3","setPickOneLvl3","pickOneLvl3Food","setPickOneLvl3Food","pickOneLvl3Wood","setPickOneLvl3Wood","pickOneLvl3Stone","setPickOneLvl3Stone","pickOneLvl3Gold","setPickOneLvl3Gold","pickOneLvl4","setPickOneLvl4","pickOneLvl4Food","setPickOneLvl4Food","pickOneLvl4Wood","setPickOneLvl4Wood","pickOneLvl4Stone","setPickOneLvl4Stone","pickOneLvl4Gold","setPickOneLvl4Gold","rssPackLvl1A","setRssPack1A","rssPackLvl1B","setRssPack1B","rssPackLvl1C","setRssPack1C","rssPackLvl2","setRssPack2","onStoreFood","setOnStoreFood","onStoreWood","setOnStoreWood","onStoreStone","setOnStoreStone","onStoreGold","setOnStoreGold","getPackLvl1A","pickLvl1ToCount","returnArr","Math","floor","getPackLvl1B","getPackLvl1C","getPackLvl2","getFoodPakTotal","getPickOneLvl1Counts","pickOneLvl1ToCount","levelOneCounts","getPickOneLvl2Counts","getPickOneLvl3Counts","getPickOneLvl4Counts","getPickOneFood","getPickOneWood","getPickOneStone","getPickOneGold","getLvlRssPackFood","getLvlRssPackWood","getLvlRssPackStone","getLvlRssPackGold","getWoodPakTotal","getStonePakTotal","getGoldPakTotal","className","type","placeholder","value","onChange","event","target","toFixed","checked","Number","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75ce6d0c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from 'react';\nimport logo from '../logo.svg';\n\nconst Rss = () => {\n  const [food1k, setFood1k] = useState();\n  const [food10k, setFood10k] = useState();\n  const [food50k, setFood50k] = useState();\n  const [food150k, setFood150k] = useState();\n  const [food500k, setFood500k] = useState();\n  const [food1500k, setFood1500k] = useState();\n  const [food5kk, setFood5kk] = useState();\n  const [foodTotal, setFoodTotal] = useState();\n\n  const [wood1k, setWood1k] = useState();\n  const [wood10k, setWood10k] = useState();\n  const [wood50k, setWood50k] = useState();\n  const [wood150k, setWood150k] = useState();\n  const [wood500k, setWood500k] = useState();\n  const [wood1500k, setWood1500k] = useState();\n  const [wood5kk, setWood5kkk] = useState();\n  const [woodTotal, setWoodTotal] = useState();\n\n  const [stone750, setStone750] = useState();\n  const [stone7500, setStone7500] = useState();\n  const [stone37500, setStone37500] = useState();\n  const [stone112k, setStone112k] = useState();\n  const [stone375k, setStone375k] = useState();\n  const [stone1m, setStone1m] = useState();\n  const [stone3kk, setSton3kk] = useState();\n  const [stoneTotal, setStoneTotal] = useState();\n\n  const [gold500, setGold500] = useState();\n  const [gold3000, setGold3000] = useState();\n  const [gold15k, setGold15k] = useState();\n  const [gold50k, setGold50k] = useState();\n  const [gold200k, setGold200k] = useState();\n  const [gold600k, seGold600k] = useState();\n  const [gold2kk, setGold2kk] = useState();\n  const [goldTotal, setGoldTotal] = useState();\n\n  const [pickOneLvl1, setPickOneLvl1] = useState();\n  const [pickOneLvl1Food, setPickOneLvl1Food] = useState(false);\n  const [pickOneLvl1Wood, setPickOneLvl1Wood] = useState(false);\n  const [pickOneLvl1Stone, setPickOneLvl1Stone] = useState(false);\n  const [pickOneLvl1Gold, setPickOneLvl1Gold] = useState(false);\n\n  const [pickOneLvl2, setPickOneLvl2] = useState();\n  const [pickOneLvl2Food, setPickOneLvl2Food] = useState(false);\n  const [pickOneLvl2Wood, setPickOneLvl2Wood] = useState(false);\n  const [pickOneLvl2Stone, setPickOneLvl2Stone] = useState(false);\n  const [pickOneLvl2Gold, setPickOneLvl2Gold] = useState(false);\n\n  const [pickOneLvl3, setPickOneLvl3] = useState();\n  const [pickOneLvl3Food, setPickOneLvl3Food] = useState(false);\n  const [pickOneLvl3Wood, setPickOneLvl3Wood] = useState(false);\n  const [pickOneLvl3Stone, setPickOneLvl3Stone] = useState(false);\n  const [pickOneLvl3Gold, setPickOneLvl3Gold] = useState(false);\n\n  const [pickOneLvl4, setPickOneLvl4] = useState();\n  const [pickOneLvl4Food, setPickOneLvl4Food] = useState(false);\n  const [pickOneLvl4Wood, setPickOneLvl4Wood] = useState(false);\n  const [pickOneLvl4Stone, setPickOneLvl4Stone] = useState(false);\n  const [pickOneLvl4Gold, setPickOneLvl4Gold] = useState(false);\n\n  const [rssPackLvl1A, setRssPack1A] = useState();\n  const [rssPackLvl1B, setRssPack1B] = useState();\n  const [rssPackLvl1C, setRssPack1C] = useState();\n  const [rssPackLvl2, setRssPack2] = useState();\n\n  const [onStoreFood, setOnStoreFood] = useState();\n  const [onStoreWood, setOnStoreWood] = useState();\n  const [onStoreStone, setOnStoreStone] = useState();\n  const [onStoreGold, setOnStoreGold] = useState();\n\n  const getPackLvl1A = () => {\n    const pickLvl1ToCount = rssPackLvl1A ? rssPackLvl1A : 0;\n    const returnArr = [0, 0];\n    if (pickLvl1ToCount) {\n      returnArr[0] = Math.floor(pickLvl1ToCount / 2);\n      returnArr[1] = pickLvl1ToCount - returnArr[0];\n    }\n\n    return returnArr;\n  };\n  const getPackLvl1B = () => {\n    const pickLvl1ToCount = rssPackLvl1B ? rssPackLvl1B : 0;\n    const returnArr = [0, 0, 0];\n    if (pickLvl1ToCount) {\n      returnArr[0] = Math.floor(pickLvl1ToCount / 3);\n      returnArr[1] = Math.floor((pickLvl1ToCount - returnArr[0]) / 2);\n      returnArr[2] = pickLvl1ToCount - returnArr[0] - returnArr[1];\n    }\n\n    return returnArr;\n  };\n\n  const getPackLvl1C = () => {\n    const pickLvl1ToCount = rssPackLvl1C ? rssPackLvl1C : 0;\n    const returnArr = [0, 0, 0, 0];\n    if (pickLvl1ToCount) {\n      returnArr[0] = Math.floor(pickLvl1ToCount / 4);\n      returnArr[1] = Math.floor((pickLvl1ToCount - returnArr[0]) / 3);\n      returnArr[2] = Math.floor((pickLvl1ToCount - returnArr[0] - returnArr[1]) / 2);\n      returnArr[3] = pickLvl1ToCount - returnArr[0] - returnArr[1] - returnArr[2];\n    }\n\n    return returnArr;\n  };\n\n  const getPackLvl2 = () => {\n    const pickLvl1ToCount = rssPackLvl2 ? rssPackLvl2 : 0;\n    const returnArr = [0, 0, 0, 0];\n    if (pickLvl1ToCount) {\n      returnArr[0] = Math.floor(pickLvl1ToCount / 4);\n      returnArr[1] = Math.floor((pickLvl1ToCount - returnArr[0]) / 3);\n      returnArr[2] = Math.floor((pickLvl1ToCount - returnArr[0] - returnArr[1]) / 2);\n      returnArr[3] = pickLvl1ToCount - returnArr[0] - returnArr[1] - returnArr[2];\n    }\n\n    return returnArr;\n  };\n\n  const getFoodPakTotal = () => {\n    const totalFood1k = (food1k ? food1k : 0) * 1000;\n    const totalFood10k = (food10k ? food10k : 0) * 10000;\n    const totalFood50k = (food50k ? food50k : 0) * 50000;\n    const totalFood150k = (food150k ? food150k : 0) * 150000;\n    const totalFood500k = (food500k ? food500k : 0) * 500000;\n    const totalFood15m = (food1500k ? food1500k : 0) * 1500000;\n    const totalFood5m = (food5kk ? food5kk : 0) * 5000000;\n\n    return (\n      totalFood1k +\n      totalFood10k +\n      totalFood50k +\n      totalFood150k +\n      totalFood500k +\n      totalFood15m +\n      totalFood5m\n    );\n  };\n\n  const getPickOneLvl1Counts = () => {\n    const pickOneLvl1ToCount = pickOneLvl1 ? pickOneLvl1 : 0;\n\n    const levelOneCounts = [];\n\n    if (pickOneLvl1Food) {\n      levelOneCounts[0] = pickOneLvl1ToCount;\n      if (pickOneLvl1Wood) {\n        levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 2);\n        levelOneCounts[1] = pickOneLvl1ToCount - levelOneCounts[0];\n        if (pickOneLvl1Stone) {\n          levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 3);\n          levelOneCounts[1] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 2);\n          levelOneCounts[2] = pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1];\n          if (pickOneLvl1Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 4);\n            levelOneCounts[1] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 3);\n            levelOneCounts[2] = Math.floor(\n              (pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1]) / 2\n            );\n            levelOneCounts[3] =\n              pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1] - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl1Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 3);\n            levelOneCounts[1] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      } else {\n        levelOneCounts[1] = 0;\n        if (pickOneLvl1Stone) {\n          levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 2);\n          levelOneCounts[2] = pickOneLvl1ToCount - levelOneCounts[0];\n          if (pickOneLvl1Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 3);\n            levelOneCounts[2] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl1Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[0];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      }\n    } else {\n      levelOneCounts[0] = 0;\n      if (pickOneLvl1Wood) {\n        levelOneCounts[1] = pickOneLvl1ToCount;\n        if (pickOneLvl1Stone) {\n          levelOneCounts[1] = Math.floor(pickOneLvl1ToCount / 2);\n          levelOneCounts[2] = pickOneLvl1ToCount - levelOneCounts[1];\n          if (pickOneLvl1Gold) {\n            levelOneCounts[1] = Math.floor(pickOneLvl1ToCount / 3);\n            levelOneCounts[2] = Math.floor((pickOneLvl1ToCount - levelOneCounts[1]) / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[1] - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl1Gold) {\n            levelOneCounts[1] = Math.floor(pickOneLvl1ToCount / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[1];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      } else {\n        levelOneCounts[1] = 0;\n        if (pickOneLvl1Stone) {\n          levelOneCounts[2] = pickOneLvl1ToCount;\n          if (pickOneLvl1Gold) {\n            levelOneCounts[2] = Math.floor(pickOneLvl1ToCount / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl1Gold) {\n            levelOneCounts[3] = pickOneLvl1ToCount;\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      }\n    }\n    return levelOneCounts;\n  };\n\n  const getPickOneLvl2Counts = () => {\n    const pickOneLvl1ToCount = pickOneLvl2 ? pickOneLvl2 : 0;\n\n    const levelOneCounts = [];\n\n    if (pickOneLvl2Food) {\n      levelOneCounts[0] = pickOneLvl1ToCount;\n      if (pickOneLvl2Wood) {\n        levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 2);\n        levelOneCounts[1] = pickOneLvl1ToCount - levelOneCounts[0];\n        if (pickOneLvl2Stone) {\n          levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 3);\n          levelOneCounts[1] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 2);\n          levelOneCounts[2] = pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1];\n          if (pickOneLvl2Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 4);\n            levelOneCounts[1] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 3);\n            levelOneCounts[2] = Math.floor(\n              (pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1]) / 2\n            );\n            levelOneCounts[3] =\n              pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1] - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl2Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 3);\n            levelOneCounts[1] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      } else {\n        levelOneCounts[1] = 0;\n        if (pickOneLvl2Stone) {\n          levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 2);\n          levelOneCounts[2] = pickOneLvl1ToCount - levelOneCounts[0];\n          if (pickOneLvl2Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 3);\n            levelOneCounts[2] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl2Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[0];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      }\n    } else {\n      levelOneCounts[0] = 0;\n      if (pickOneLvl2Wood) {\n        levelOneCounts[1] = pickOneLvl1ToCount;\n        if (pickOneLvl2Stone) {\n          levelOneCounts[1] = Math.floor(pickOneLvl1ToCount / 2);\n          levelOneCounts[2] = pickOneLvl1ToCount - levelOneCounts[1];\n          if (pickOneLvl2Gold) {\n            levelOneCounts[1] = Math.floor(pickOneLvl1ToCount / 3);\n            levelOneCounts[2] = Math.floor((pickOneLvl1ToCount - levelOneCounts[1]) / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[1] - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl2Gold) {\n            levelOneCounts[1] = Math.floor(pickOneLvl1ToCount / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[1];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      } else {\n        levelOneCounts[1] = 0;\n        if (pickOneLvl2Stone) {\n          levelOneCounts[2] = pickOneLvl1ToCount;\n          if (pickOneLvl2Gold) {\n            levelOneCounts[2] = Math.floor(pickOneLvl1ToCount / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl2Gold) {\n            levelOneCounts[3] = pickOneLvl1ToCount;\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      }\n    }\n    return levelOneCounts;\n  };\n\n  const getPickOneLvl3Counts = () => {\n    const pickOneLvl1ToCount = pickOneLvl3 ? pickOneLvl3 : 0;\n\n    const levelOneCounts = [];\n\n    if (pickOneLvl3Food) {\n      levelOneCounts[0] = pickOneLvl1ToCount;\n      if (pickOneLvl3Wood) {\n        levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 2);\n        levelOneCounts[1] = pickOneLvl1ToCount - levelOneCounts[0];\n        if (pickOneLvl3Stone) {\n          levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 3);\n          levelOneCounts[1] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 2);\n          levelOneCounts[2] = pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1];\n          if (pickOneLvl3Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 4);\n            levelOneCounts[1] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 3);\n            levelOneCounts[2] = Math.floor(\n              (pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1]) / 2\n            );\n            levelOneCounts[3] =\n              pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1] - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl3Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 3);\n            levelOneCounts[1] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      } else {\n        levelOneCounts[1] = 0;\n        if (pickOneLvl3Stone) {\n          levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 2);\n          levelOneCounts[2] = pickOneLvl1ToCount - levelOneCounts[0];\n          if (pickOneLvl3Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 3);\n            levelOneCounts[2] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl3Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[0];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      }\n    } else {\n      levelOneCounts[0] = 0;\n      if (pickOneLvl3Wood) {\n        levelOneCounts[1] = pickOneLvl1ToCount;\n        if (pickOneLvl3Stone) {\n          levelOneCounts[1] = Math.floor(pickOneLvl1ToCount / 2);\n          levelOneCounts[2] = pickOneLvl1ToCount - levelOneCounts[1];\n          if (pickOneLvl3Gold) {\n            levelOneCounts[1] = Math.floor(pickOneLvl1ToCount / 3);\n            levelOneCounts[2] = Math.floor((pickOneLvl1ToCount - levelOneCounts[1]) / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[1] - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl3Gold) {\n            levelOneCounts[1] = Math.floor(pickOneLvl1ToCount / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[1];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      } else {\n        levelOneCounts[1] = 0;\n        if (pickOneLvl3Stone) {\n          levelOneCounts[2] = pickOneLvl1ToCount;\n          if (pickOneLvl3Gold) {\n            levelOneCounts[2] = Math.floor(pickOneLvl1ToCount / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl3Gold) {\n            levelOneCounts[3] = pickOneLvl1ToCount;\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      }\n    }\n    return levelOneCounts;\n  };\n\n  const getPickOneLvl4Counts = () => {\n    const pickOneLvl1ToCount = pickOneLvl4 ? pickOneLvl4 : 0;\n\n    const levelOneCounts = [];\n\n    if (pickOneLvl4Food) {\n      levelOneCounts[0] = pickOneLvl1ToCount;\n      if (pickOneLvl4Wood) {\n        levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 2);\n        levelOneCounts[1] = pickOneLvl1ToCount - levelOneCounts[0];\n        if (pickOneLvl4Stone) {\n          levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 3);\n          levelOneCounts[1] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 2);\n          levelOneCounts[2] = pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1];\n          if (pickOneLvl4Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 4);\n            levelOneCounts[1] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 3);\n            levelOneCounts[2] = Math.floor(\n              (pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1]) / 2\n            );\n            levelOneCounts[3] =\n              pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1] - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl4Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 3);\n            levelOneCounts[1] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[1];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      } else {\n        levelOneCounts[1] = 0;\n        if (pickOneLvl4Stone) {\n          levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 2);\n          levelOneCounts[2] = pickOneLvl1ToCount - levelOneCounts[0];\n          if (pickOneLvl4Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 3);\n            levelOneCounts[2] = Math.floor((pickOneLvl1ToCount - levelOneCounts[0]) / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[0] - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl4Gold) {\n            levelOneCounts[0] = Math.floor(pickOneLvl1ToCount / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[0];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      }\n    } else {\n      levelOneCounts[0] = 0;\n      if (pickOneLvl4Wood) {\n        levelOneCounts[1] = pickOneLvl1ToCount;\n        if (pickOneLvl4Stone) {\n          levelOneCounts[1] = Math.floor(pickOneLvl1ToCount / 2);\n          levelOneCounts[2] = pickOneLvl1ToCount - levelOneCounts[1];\n          if (pickOneLvl4Gold) {\n            levelOneCounts[1] = Math.floor(pickOneLvl1ToCount / 3);\n            levelOneCounts[2] = Math.floor((pickOneLvl1ToCount - levelOneCounts[1]) / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[1] - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl4Gold) {\n            levelOneCounts[1] = Math.floor(pickOneLvl1ToCount / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[1];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      } else {\n        levelOneCounts[1] = 0;\n        if (pickOneLvl4Stone) {\n          levelOneCounts[2] = pickOneLvl1ToCount;\n          if (pickOneLvl4Gold) {\n            levelOneCounts[2] = Math.floor(pickOneLvl1ToCount / 2);\n            levelOneCounts[3] = pickOneLvl1ToCount - levelOneCounts[2];\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        } else {\n          levelOneCounts[2] = 0;\n          if (pickOneLvl4Gold) {\n            levelOneCounts[3] = pickOneLvl1ToCount;\n          } else {\n            levelOneCounts[3] = 0;\n          }\n        }\n      }\n    }\n    return levelOneCounts;\n  };\n\n  const getPickOneFood = () => {\n    return (\n      getPickOneLvl1Counts()[0] * 10000 +\n      getPickOneLvl2Counts()[0] * 50000 +\n      getPickOneLvl3Counts()[0] * 150000 +\n      getPickOneLvl4Counts()[0] * 500000\n    );\n  };\n\n  const getPickOneWood = () => {\n    return (\n      getPickOneLvl1Counts()[1] * 10000 +\n      getPickOneLvl2Counts()[1] * 50000 +\n      getPickOneLvl3Counts()[1] * 150000 +\n      getPickOneLvl4Counts()[1] * 500000\n    );\n  };\n\n  const getPickOneStone = () => {\n    return (\n      getPickOneLvl1Counts()[2] * 7500 +\n      getPickOneLvl2Counts()[2] * 37500 +\n      getPickOneLvl3Counts()[2] * 112500 +\n      getPickOneLvl4Counts()[2] * 375000\n    );\n  };\n\n  const getPickOneGold = () => {\n    return (\n      getPickOneLvl1Counts()[3] * 3000 +\n      getPickOneLvl2Counts()[3] * 15000 +\n      getPickOneLvl3Counts()[3] * 50000 +\n      getPickOneLvl4Counts()[3] * 200000\n    );\n  };\n\n  const getLvlRssPackFood = () => {\n    return (\n      getPackLvl1A()[0] * 1000 +\n      getPackLvl1B()[0] * 1000 +\n      getPackLvl1C()[0] * 1000 +\n      getPackLvl2()[0] * 10000\n    );\n  };\n\n  const getLvlRssPackWood = () => {\n    return (\n      getPackLvl1A()[1] * 1000 +\n      getPackLvl1B()[1] * 1000 +\n      getPackLvl1C()[1] * 1000 +\n      getPackLvl2()[1] * 10000\n    );\n  };\n\n  const getLvlRssPackStone = () => {\n    return getPackLvl1B()[2] * 750 + getPackLvl1C()[2] * 750 + getPackLvl2()[2] * 7500;\n  };\n\n  const getLvlRssPackGold = () => {\n    return getPackLvl1C()[3] * 500 + getPackLvl2()[3] * 5000;\n  };\n\n  const getWoodPakTotal = () => {\n    const totalFood1k = (wood1k ? wood1k : 0) * 1000;\n    const totalFood10k = (wood10k ? wood10k : 0) * 10000;\n    const totalFood50k = (wood50k ? wood50k : 0) * 50000;\n    const totalFood150k = (wood150k ? wood150k : 0) * 150000;\n    const totalFood500k = (wood500k ? wood500k : 0) * 500000;\n    const totalFood15m = (wood1500k ? wood1500k : 0) * 1500000;\n    const totalFood5m = (wood5kk ? wood5kk : 0) * 5000000;\n\n    return (\n      totalFood1k +\n      totalFood10k +\n      totalFood50k +\n      totalFood150k +\n      totalFood500k +\n      totalFood15m +\n      totalFood5m\n    );\n  };\n\n  const getStonePakTotal = () => {\n    const totalFood1k = (stone750 ? stone750 : 0) * 750;\n    const totalFood10k = (stone7500 ? stone7500 : 0) * 7500;\n    const totalFood50k = (stone37500 ? stone37500 : 0) * 37500;\n    const totalFood150k = (stone112k ? stone112k : 0) * 112500;\n    const totalFood500k = (stone375k ? stone375k : 0) * 375000;\n    const totalFood15m = (stone1m ? stone1m : 0) * 1125000;\n    const totalFood5m = (stone3kk ? stone3kk : 0) * 3750000;\n\n    return (\n      totalFood1k +\n      totalFood10k +\n      totalFood50k +\n      totalFood150k +\n      totalFood500k +\n      totalFood15m +\n      totalFood5m\n    );\n  };\n\n  const getGoldPakTotal = () => {\n    const totalFood1k = (gold500 ? gold500 : 0) * 500;\n    const totalFood10k = (gold3000 ? gold3000 : 0) * 3000;\n    const totalFood50k = (gold15k ? gold15k : 0) * 15000;\n    const totalFood150k = (gold50k ? gold50k : 0) * 50000;\n    const totalFood500k = (gold200k ? gold200k : 0) * 200000;\n    const totalFood15m = (gold600k ? gold600k : 0) * 600000;\n    const totalFood5m = (gold2kk ? gold2kk : 0) * 2000000;\n\n    return (\n      totalFood1k +\n      totalFood10k +\n      totalFood50k +\n      totalFood150k +\n      totalFood500k +\n      totalFood15m +\n      totalFood5m\n    );\n  };\n\n  const getGrandTotalFood = () => {\n    return (\n      getFoodPakTotal() +\n      getPickOneFood() +\n      getLvlRssPackFood() +\n      (onStoreFood ? Number(onStoreFood) : 0)\n    );\n  };\n  const getGrandTotalWood = () => {\n    return (\n      getWoodPakTotal() +\n      getPickOneWood() +\n      getLvlRssPackWood() +\n      (onStoreWood ? Number(onStoreWood) : 0)\n    );\n  };\n  const getGrandTotalStone = () => {\n    return (\n      getStonePakTotal() +\n      getPickOneStone() +\n      getLvlRssPackStone() +\n      (onStoreStone ? Number(onStoreStone) : 0)\n    );\n  };\n\n  const getGrandTotalGold = () => {\n    return (\n      getGoldPakTotal() +\n      getPickOneGold() +\n      getLvlRssPackGold() +\n      (onStoreGold ? Number(onStoreGold) : 0)\n    );\n  };\n\n  return (\n    <section className=\"container custom-bg-color\">\n      <h2 className=\"title is-2\">В сумке (Tokens)</h2>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">Еда (Food)</p>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={food1k}\n                  onChange={(event) => {\n                    setFood1k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\">\n                  1k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={food10k}\n                  onChange={(event) => {\n                    setFood10k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  10k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={food50k}\n                  onChange={(event) => {\n                    setFood50k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  50k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={food150k}\n                  onChange={(event) => {\n                    setFood150k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  150k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={food500k}\n                  onChange={(event) => {\n                    setFood500k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\">\n                  500k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={food1500k}\n                  onChange={(event) => {\n                    setFood1500k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  1.5M\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={food5kk}\n                  onChange={(event) => {\n                    setFood5kk(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left has-text-white has-background-grey-light\">\n                  5M\n                </span>\n              </div>\n            </div>\n          </div>\n          <p className=\"has-text-weight-bold\">{`Сумма (Total): ${(\n            getFoodPakTotal() / 1000000\n          ).toFixed(2)}M`}</p>\n        </div>\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">Дерево (Wood)</p>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={wood1k}\n                  onChange={(event) => {\n                    setWood1k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\">\n                  1k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={wood10k}\n                  onChange={(event) => {\n                    setWood10k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  10k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={wood50k}\n                  onChange={(event) => {\n                    setWood50k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  50k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={wood150k}\n                  onChange={(event) => {\n                    setWood150k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  150k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={wood500k}\n                  onChange={(event) => {\n                    setWood500k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\">\n                  500k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={wood1500k}\n                  onChange={(event) => {\n                    setWood1500k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  1.5M\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={wood5kk}\n                  onChange={(event) => {\n                    setWood5kkk(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left has-text-white has-background-grey-light\">\n                  5M\n                </span>\n              </div>\n            </div>\n          </div>\n          <p className=\"has-text-weight-bold\">{`Сумма (Total): ${(\n            getWoodPakTotal() / 1000000\n          ).toFixed(2)}M`}</p>\n        </div>\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">Камень (Stone)</p>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={stone750}\n                  onChange={(event) => {\n                    setStone750(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\">\n                  0.75k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={stone7500}\n                  onChange={(event) => {\n                    setStone7500(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  7.5k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={stone37500}\n                  onChange={(event) => {\n                    setStone37500(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  37.5k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={stone112k}\n                  onChange={(event) => {\n                    setStone112k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  112k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={stone375k}\n                  onChange={(event) => {\n                    setStone375k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\">\n                  375k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={stone1m}\n                  onChange={(event) => {\n                    setStone1m(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  1.1M\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={stone3kk}\n                  onChange={(event) => {\n                    setSton3kk(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left has-text-white has-background-grey-light\">\n                  3.7M\n                </span>\n              </div>\n            </div>\n          </div>\n          <p className=\"has-text-weight-bold\">{`Сумма (Total): ${(\n            getStonePakTotal() / 1000000\n          ).toFixed(2)}M`}</p>\n        </div>\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">Золото (Gold)</p>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={gold500}\n                  onChange={(event) => {\n                    setGold500(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\">\n                  0.5k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={gold3000}\n                  onChange={(event) => {\n                    setGold3000(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  3k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={gold15k}\n                  onChange={(event) => {\n                    setGold15k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  15k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={gold50k}\n                  onChange={(event) => {\n                    setGold50k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  50k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={gold200k}\n                  onChange={(event) => {\n                    setGold200k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\">\n                  200k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={gold600k}\n                  onChange={(event) => {\n                    seGold600k(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light \">\n                  600k\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={gold2kk}\n                  onChange={(event) => {\n                    setGold2kk(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left has-text-white has-background-grey-light\">\n                  2M\n                </span>\n              </div>\n            </div>\n          </div>\n          <p className=\"has-text-weight-bold\">{`Сумма (Total): ${(\n            getGoldPakTotal() / 1000000\n          ).toFixed(2)}M`}</p>\n        </div>\n      </div>\n\n      <h2 className=\"title is-2\">Что-то одно (Pick One)</h2>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">Ур. 1 (level 1)</p>\n\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={pickOneLvl1}\n                  onChange={(event) => {\n                    setPickOneLvl1(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\"></span>\n              </div>\n            </div>\n          </div>\n          <div className=\"is-flex is-flex-direction-row is-justify-content-space-between\">\n            <div className=\"field \">\n              Еда (Food):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl1Food}\n                  onChange={() => {\n                    setPickOneLvl1Food(!pickOneLvl1Food);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n            <div className=\"field \">\n              Дерево (Wood):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl1Wood}\n                  onChange={() => {\n                    setPickOneLvl1Wood(!pickOneLvl1Wood);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n            <div className=\"field \">\n              Камень (Stone):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl1Stone}\n                  onChange={() => {\n                    setPickOneLvl1Stone(!pickOneLvl1Stone);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n            <div className=\"field \">\n              Золото (Gold):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl1Gold}\n                  onChange={() => {\n                    setPickOneLvl1Gold(!pickOneLvl1Gold);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">Ур. 2 (level 2)</p>\n\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={pickOneLvl2}\n                  onChange={(event) => {\n                    setPickOneLvl2(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\"></span>\n              </div>\n            </div>\n          </div>\n          <div className=\"is-flex is-flex-direction-row is-justify-content-space-between\">\n            <div className=\"field \">\n              Еда (Food):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl2Food}\n                  onChange={() => {\n                    setPickOneLvl2Food(!pickOneLvl2Food);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n            <div className=\"field \">\n              Дерево (Wood):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl2Wood}\n                  onChange={() => {\n                    setPickOneLvl2Wood(!pickOneLvl2Wood);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n            <div className=\"field \">\n              Камень (Stone):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl2Stone}\n                  onChange={() => {\n                    setPickOneLvl2Stone(!pickOneLvl2Stone);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n            <div className=\"field \">\n              Золото (Gold):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl2Gold}\n                  onChange={() => {\n                    setPickOneLvl2Gold(!pickOneLvl2Gold);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">Ур. 3 (level 3)</p>\n\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={pickOneLvl3}\n                  onChange={(event) => {\n                    setPickOneLvl3(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\"></span>\n              </div>\n            </div>\n          </div>\n          <div className=\"is-flex is-flex-direction-row is-justify-content-space-between\">\n            <div className=\"field \">\n              Еда (Food):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl3Food}\n                  onChange={() => {\n                    setPickOneLvl3Food(!pickOneLvl3Food);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n            <div className=\"field \">\n              Дерево (Wood):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl3Wood}\n                  onChange={() => {\n                    setPickOneLvl3Wood(!pickOneLvl3Wood);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n            <div className=\"field \">\n              Камень (Stone):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl3Stone}\n                  onChange={() => {\n                    setPickOneLvl3Stone(!pickOneLvl3Stone);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n            <div className=\"field \">\n              Золото (Gold):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl3Gold}\n                  onChange={() => {\n                    setPickOneLvl3Gold(!pickOneLvl3Gold);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">Ур. 4 (level 4)</p>\n\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={pickOneLvl4}\n                  onChange={(event) => {\n                    setPickOneLvl4(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\"></span>\n              </div>\n            </div>\n          </div>\n          <div className=\"is-flex is-flex-direction-row is-justify-content-space-between\">\n            <div className=\"field \">\n              Еда (Food):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl4Food}\n                  onChange={() => {\n                    setPickOneLvl4Food(!pickOneLvl4Food);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n            <div className=\"field \">\n              Дерево (Wood):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl4Wood}\n                  onChange={() => {\n                    setPickOneLvl4Wood(!pickOneLvl4Wood);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n            <div className=\"field \">\n              Камень (Stone):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl4Stone}\n                  onChange={() => {\n                    setPickOneLvl4Stone(!pickOneLvl4Stone);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n            <div className=\"field \">\n              Золото (Gold):\n              <label className=\"switch ml-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={pickOneLvl4Gold}\n                  onChange={() => {\n                    setPickOneLvl4Gold(!pickOneLvl4Gold);\n                  }}\n                />\n\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"is-flex is-flex-direction-row is-justify-content-space-between\">\n        <p className=\"has-text-weight-bold\">{`Еда (Food): ${(getPickOneFood() / 1000000).toFixed(\n          2\n        )}M`}</p>\n        <p className=\"has-text-weight-bold\">{`Дерево (Wood): ${(getPickOneWood() / 1000000).toFixed(\n          2\n        )}M`}</p>\n        <p className=\"has-text-weight-bold\">{`Камень (Stone): ${(\n          getPickOneStone() / 1000000\n        ).toFixed(2)}M`}</p>\n        <p className=\"has-text-weight-bold\">{` (Total): ${(getPickOneGold() / 1000000).toFixed(\n          2\n        )}M`}</p>\n      </div>\n      <h2 className=\"title is-2 mt-5\">Набор ресурсов (Resource Packs)</h2>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">A Ур. 1 (A level 1)</p>\n\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={rssPackLvl1A}\n                  onChange={(event) => {\n                    setRssPack1A(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">B Ур. 1 (B level 1)</p>\n\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={rssPackLvl1B}\n                  onChange={(event) => {\n                    setRssPack1B(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">C Ур. 1 (C level 1)</p>\n\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={rssPackLvl1C}\n                  onChange={(event) => {\n                    setRssPack1C(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <p className=\"subtitle is-4\"> Ур 2 (level 2)</p>\n\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={rssPackLvl2}\n                  onChange={(event) => {\n                    setRssPack2(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"is-flex is-flex-direction-row is-justify-content-space-between\">\n        <p className=\"has-text-weight-bold\">{`Еда (Food): ${(getLvlRssPackFood() / 1000000).toFixed(\n          2\n        )}M`}</p>\n        <p className=\"has-text-weight-bold\">{`Дерево (Wood): ${(\n          getLvlRssPackWood() / 1000000\n        ).toFixed(2)}M`}</p>\n        <p className=\"has-text-weight-bold\">{`Камень (Stone): ${(\n          getLvlRssPackStone() / 1000000\n        ).toFixed(2)}M`}</p>\n        <p className=\"has-text-weight-bold\">{` (Total): ${(getLvlRssPackGold() / 1000000).toFixed(\n          2\n        )}M`}</p>\n      </div>\n      <h2 className=\"title is-2\">На складе (On Store)</h2>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">Еда (Food)</p>\n\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={onStoreFood}\n                  onChange={(event) => {\n                    setOnStoreFood(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">Дерево (Wood)</p>\n\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={onStoreWood}\n                  onChange={(event) => {\n                    setOnStoreWood(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">Камень (Stone)</p>\n\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={onStoreStone}\n                  onChange={(event) => {\n                    setOnStoreStone(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <p className=\"subtitle is-4\">Золото (Gold)</p>\n\n          <div className=\"field\">\n            <div className=\"control has-icons-left has-icons-right\">\n              <div className=\"control\">\n                <input\n                  className=\"input ml-2\"\n                  type=\"text\"\n                  placeholder={`0`}\n                  value={onStoreGold}\n                  onChange={(event) => {\n                    setOnStoreGold(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-left  has-text-white has-background-grey-light\"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <h2 className=\"title is-2\">Итого (Grand Total)</h2>\n      <p className=\"subtitle is-4\">\n        Еда (Food):{' '}\n        <span className=\"has-text-weight-bold\">{(getGrandTotalFood() / 1000000).toFixed(2)}M</span>\n      </p>\n      <p className=\"subtitle is-4\">\n        Дерево (Wood):{' '}\n        <span className=\"has-text-weight-bold\">{(getGrandTotalWood() / 1000000).toFixed(2)}M</span>\n      </p>\n      <p className=\"subtitle is-4\">\n        Камень (Stone):{' '}\n        <span className=\"has-text-weight-bold\">{(getGrandTotalStone() / 1000000).toFixed(2)}M</span>\n      </p>\n      <p className=\"subtitle is-4\">\n        Золото (Gold):{' '}\n        <span className=\"has-text-weight-bold\">{(getGrandTotalGold() / 1000000).toFixed(2)}M</span>\n      </p>\n    </section>\n  );\n};\n\nexport default Rss;\n","import logo from './logo.svg';\nimport './css/styles.scss';\nimport {HashRouter, Switch, Route} from 'react-router-dom';\nimport Rss from \"./components/rss\";\n\nfunction App() {\n  return (    <HashRouter >\n    <Switch>\n      <Route exact path=\"/rss\" component = {Rss}/>\n\n    </Switch>\n  </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}